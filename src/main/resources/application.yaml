springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

spring:
  application:
    name: chatbot4j # Application name
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/chatbot4j} # Database connection URL
    username: ${DB_USERNAME:chatbot} # Database username
    password: ${DB_PASSWORD:chatbot} # Database password
    driver-class-name: org.postgresql.Driver # Database driver class
    hikari:
      maximum-pool-size: 10 # Maximum connection pool size
      minimum-idle: 2 # Minimum idle connections
      idle-timeout: 30000 # Idle connection timeout (milliseconds)
      connection-timeout: 30000 # Connection acquisition timeout (milliseconds)
      max-lifetime: 1800000 # Maximum connection lifetime (milliseconds)
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect # Hibernate dialect
    hibernate:
      ddl-auto: update # Automatically manage database schema (options: update, create, create-drop, validate, none)
    show-sql: true # Print SQL logs
    properties:
      hibernate.format_sql: true # Format SQL logs
  # data:
  #   redis:
  #     host: ${REDIS_HOST:localhost} # Redis host
  #     port: ${REDIS_PORT:6379} # Redis port, default is 6379
  #     password: ${REDIS_PASSWORD:} # Redis password, default is empty
  #     database: ${REDIS_DATABASE:0} # Redis database index, default is 0
  #     timeout: ${REDIS_TIMEOUT:2000} # Redis connection timeout in milliseconds

logging:
  level:
    root: INFO # Global log level
    org.springframework: INFO # Spring-related log level
    com.example: DEBUG # Custom package log level
    org.hibernate.type.descriptor.sql: TRACE # Hibernate SQL log level
    dev.langchain4j: DEBUG # langchain4j-related log level
    dev.chatbot: DEBUG

# chatbot model config
chatbot:
  # datasets:
  #   base-dir: ${DATASETS_BASE:/data} # Dataset base directory
  #   sync-policy: ${DATASETS_SYNC_POLICY:NEVER} # Synchronize datasets
  embedding:
    base-url: ${EMBEDDING_BASE_URL:https://api.openai.com} # Base URL for embedding service
  llm:
    base-url: ${LLM_BASE_URL:https://api.openai.com/v1/} # Base URL for LLM service
    model-name: ${LLM_MODEL:gpt-4o-mini} # LLM model name
    api-key: ${LLM_API_KEY:demo} # API key for LLM service
    temperature: 0.8
    top-p: 0.9
    max-tokens: 512
  tavily:
    api-key: ${TAVILY_API_KEY:demo} # Tavily API key, used for web search
